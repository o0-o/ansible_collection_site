# vim: ts=2:sw=2:sts=2:et:ft=yaml
#
### REQUIRED
# The namespace of the collection. This can be a company/brand/
# organization or product namespace under which all content lives. May
# only contain alphanumeric lowercase characters and underscores.
# Namespaces cannot start with underscores or numbers and cannot contain
# consecutive underscores
namespace: o0_o

# The name of the collection. Has the same character restrictions as
# 'namespace'
name: site

# The version of the collection. Must be compatible with semantic
# versioning
version: 0.1.0-alpha.1

# The path to the Markdown (.md) readme file. This path is relative to
# the root of the collection
readme: README.md

# A list of the collection's content authors. Can be just the name or
# in the format 'Full Name <email> (url)
# @nicks:irc/im.site#channel'
authors:
- o0-o <o@o0-o.ooo>


### OPTIONAL but strongly recommended
# A short summary description of the collection
description: >
  This collection contains roles for deploying network and server
  infrastructure onto bare metal. The scope of a deployment is referred to as a
  \"site\" which correlates to a /16 subnet of the class A private IPv4 network
  (10.site['id'].0.0/16) as well as a fully qualified domain name
  (site.example.com). Sites are further divided into subdomains defined by /24
  subnets and subdomains of the FQDN. Common services are built on top of the
  network while avoiding circular dependencies. This collection is intended for
  use by small to mid-size MSPs, IT departments or individuals managing up to
  255 physically separate IPv4 networks.

# Either a single license or a list of licenses for content inside of a
# collection. Ansible Galaxy currently only accepts
# L(SPDX,https://spdx.org/licenses/) licenses. This key is mutually
# exclusive with 'license_file'
license:
- MIT

# The path to the license file for the collection. This path is relative
# to the root of the collection. This key is mutually exclusive with
# 'license' license_file: ''

# A list of tags you want to associate with the collection for indexing/
# searching. A tag name has the same character requirements as
# 'namespace' and 'name'
tags:
- infrastructure

# Collections that this collection requires to be installed for it to be
# usable. The key of the dict is the collection label 'namespace.name'.
# The value is a version range L(specifiers,
# https://python-semanticversion.readthedocs.io/en/latest/
# #requirement-specification). Multiple version range specifiers can be
# set and are separated by ','
dependencies: {}

# The URL of the originating SCM repository
repository: https://github.com/o0-o/ansible-collection-site

# The URL to any online docs
documentation: https://github.com/o0-o/ansible-collection-site

# The URL to the homepage of the collection/project
#homepage: http://example.com

# The URL to the collection issue tracker
issues: https://github.com/o0-o/ansible-collection-site/issues

# A list of file glob-like patterns used to filter any files or
# directories that should not be included in the build artifact. A
# pattern is matched from the relative path of the file or directory of
# the collection directory. This uses 'fnmatch' to match the files or
# directories. Some directories and files like 'galaxy.yml', '*.pyc',
# '*.retry', and '.git' are always filtered
build_ignore:
- .DS_Store
