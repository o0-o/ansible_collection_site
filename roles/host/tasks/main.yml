---
# vim: ts=2:sw=2:sts=2:et:ft=yaml.ansible
#
# Setup host
#
########################################################################

- name: Clear any cached facts
  ansible.builtin.meta: clear_facts

- name: Configure connection to host
  ansible.builtin.include_tasks: cfg_con.yml

- name: Configure privilege escalation
  ansible.builtin.include_tasks: cfg_become.yml
  when: ansible_user != 'root'

- name: Get platform
  ansible.builtin.raw: uname
  register: uname_reg
  changed_when: false

- name: Sync clocks
  ansible.builtin.include_tasks: cfg_time.yml

- name: Install macOS Dependencies
  when: uname_reg['stdout_lines'][0] | lower == 'darwin'
  block:

    - name: Gather facts
      ansible.builtin.setup:

    - name: Install command line tools
      ansible.builtin.include_role:
        name: elliotweiser.osx-command-line-tools

    - name: Install Homebrew
      ansible.builtin.include_role:
        name: geerlingguy.mac.homebrew

- name: Configure Python interpreter
  ansible.builtin.include_tasks: cfg_python.yml

- name: Gather facts
  ansible.builtin.setup:

- name: Load platform-specific variables
  ansible.builtin.include_tasks: vars.yml

- name: Install any other Ansible dependencies (except on macOS)
  ansible.builtin.package:
    name: "{{ ansible_dependencies }}"
    state: present
  become: true
  when: ansible_system | lower != 'darwin'

- name: Install any other Ansible dependencies (macOS)
  community.general.homebrew:
    name: "{{ ansible_dependencies }}"
    state: installed
  when: ansible_system | lower == 'darwin'

- name: Configure SELinux
  ansible.builtin.include_tasks: cfg_selinux.yml

- name: "Set timezone to {{ site['tz'] }}"
  community.general.timezone:
    name: "{{ site['tz'] }}"
  become: true

- name: Create a local admin user for Ansible instead of using root
  ansible.builtin.include_tasks: create_ansible_user.yml
  when:
    - ansible_user == 'root'
    - not use_root_user

- name: Grant administrator privileges to new administrator
  ansible.builtin.include_tasks: grant_user_adm.yml
  vars:
    adm_user_var: "{{ new_ansible_user | default(ansible_user) }}"

- name: Switch Ansible user to new administrator
  ansible.builtin.include_tasks: switch_ansible_user.yml
  when: new_ansible_user is defined

- name: Force handlers to run
  ansible.builtin.meta: flush_handlers
