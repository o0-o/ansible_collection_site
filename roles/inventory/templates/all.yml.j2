{# vim: ts=2:sw=2:sts=2:et:ft=yaml.ansible

Generate the initial all.yml file with comment header documenting its
function.

#}
---
{{ (  default_comment_header | default()
      + "
This file defines services (srv_def), and all site dictionaries
named after each site's fully qualified domain name (replacing
periods with underscores).

Other variables may be added here as well. While parts of this file
are generated by Ansible, it will not overwrite the whole file after
it has been created. However, it will add to it as sites are created." )
    | comment(  prefix=yaml_comment_prefix | default(),
                postfix=default_comment_postfix | default() ) }}
# Service Definitions
#
# Define services here. If no definition is available, /etc/services is
# used. The IANA service definitions tend to assign both UDP and TCP to
# services that really only need one or the other. Redefining them here
# can be helpful in correcting those generalizations. An example might
# be to distinguish HTTP (TCP port 80) from QUIC (UDP port 80), or to
# simply avoid needlessly opening TCP port 53 when DNS queries are only
# being served on UDP port 53.
#
# Example:
#
# srv_def:
#   dhcp:
#     udp:
#     - 67
#   ping:
#     icmp:
#     - 8
#   www:
#     tcp:
#     - 80
#     - 443
srv_def:
  {{  update_srv_def
      | default(srv_def)
      | default({})
      | to_nice_yaml(width=1023, indent=2)
      | indent(2) }}

# Sites
#
# The site variables define a physical or virtual location. The site
# could be an office, colocation or cloud that share an FQDN, LANs and
# gateway(s).
#
# We store site variables in a dictionary named after the FQDN of the
# site. This allows us to inspect all sites if we use the entire
# inventory directory as the Ansible inventory. Group variables for a
# specific site will assign its site dictionary to the "site" variable.
#
# site.example.com:
#
#   The time the site was created (epoch)
#
#   created: 1640721645
#
#   The site name is used to complete the fully qualified domain name
#   (FQDN) for the site.
#
#   name: site
#
#   Storing the \"effective\" top-level domain is generally more useful
#   than storing both tld and sld/2ld separately since in a practical
#   sense, the eTLD is atomic for devop/sysadmin operations. This should
#   be the public, registered domain for the site.
#
#   etld: example.com
#
#   The site ID must be unique to the site. It will correspond to the
#   2nd octet in /24 LAN addressing for the site. This not only allows
#   us to easily distinguish addresses across sites, but also allows for
#   tunneling without risk of address collisions. The LAN addressing
#   schema is 10.site.subnet.host.
#
#   id: 123
#
#   This should be self-explanatory. An example would be \"Headquarters\",
#   \"Northeast Campus\" or similar. The only restriction is that it
#   should be limited to a single line. If the description contains any
#   quotes or special characters, ensure they are quoted or escaped
#   properly.
#
#   description: An example location

# Add custom variables below:
