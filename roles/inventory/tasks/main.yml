---
# vim: ts=2:sw=2:sts=2:et:ft=yaml.ansible
#
# Configure site inventory on localhost
#
########################################################################

- name: Configure site inventory on localhost
  run_once: true
  block:

    - name: Get collection metadata
      ansible.builtin.include_vars:
        file: "{{ role_path | dirname | dirname }}/galaxy.yml"
        name: site_collection

    # Can't do this in defaults because it relies on retrieving collection
    # metadata variables.
    - name: Define default comment header
      ansible.builtin.set_fact:
        default_comment_header: "\
          Generated by the o0_o.site collection {{ site_collection['version'] }}
          \n\n\
          Some or all of this file is managed by Ansible. Changes may be
          overwritten (see below).\n \n"

    - name: Define site
      ansible.builtin.include_tasks: def_site.yml

    - name: "Create {{ inv_dir_var }}"
      ansible.builtin.file:
        path: "{{ inv_dir_var }}"
        state: directory
        mode: 0755
      delegate_to: 127.0.0.1
      vars:
        inv_dir_var: "{{ cwd }}/inventory"

    - name: "Create {{ hv_dir_var }}"
      ansible.builtin.file:
        path: "{{ hv_dir_var }}"
        state: directory
        mode: 0755
      delegate_to: 127.0.0.1
      vars:
        hv_dir_var: "{{ cwd }}/inventory/host_vars"

    - name: "Create {{ gv_dir_var }}"
      ansible.builtin.file:
        path: "{{ gv_dir_var }}"
        state: directory
        mode: 0755
      delegate_to: 127.0.0.1
      vars:
        gv_dir_var: "{{ cwd }}/inventory/group_vars"

    - name: "Initialize {{ inv_var }} if it doesn't exist"
      ansible.builtin.template:
        src: site_inv.yml.j2
        dest: "{{ inv_var }}"
        mode: 0644
        force: false
      delegate_to: 127.0.0.1
      vars:
        inv_var: "{{ cwd }}/inventory/{{ site['name'] }}.{{ site['etld'] }}.yml"

    - name: "Initialize {{ gv_all_var }} if it doesn't exist"
      ansible.builtin.template:
        src: all.yml.j2
        dest: "{{ gv_all_var }}"
        mode: 0644
        force: false
      delegate_to: 127.0.0.1
      vars:
        gv_all_var: "{{ cwd }}/inventory/group_vars/all.yml"

    - name: "Configure site variables in {{ gv_all_var }}"
      ansible.builtin.blockinfile:
        path: "{{ gv_all_var }}"
        marker: "# {mark} ANSIBLE MANAGED BLOCK: Site - {{ site_uri }}"
        block: |
          {{ site_uri | regex_replace('\.', '_') }}:
            {{ site | to_nice_yaml(width=1023, indent=2) | indent(2) }}
        mode: 0644
        backup: true
      delegate_to: 127.0.0.1
      vars:
        gv_all_var: "{{ cwd }}/inventory/group_vars/all.yml"

    - name: "Initialize {{ gv_site_var }} if it doesn't exist"
      ansible.builtin.template:
        src: site_group_vars.yml.j2
        dest: "{{ gv_site_var }}"
        mode: 0644
        force: false
      delegate_to: 127.0.0.1
      vars:
        gv_site_var: "{{ cwd }}/inventory/group_vars\
          /{{ site['name'] }}_{{ site['etld'] | regex_replace('\\.', '_') }}.yml"

- name: Initialize hostvars file if it doesn't exist (skips localhost)
  ansible.builtin.template:
    src: host_vars.yml.j2
    dest: "{{ hv_var }}"
    mode: 0644
    force: false
  delegate_to: 127.0.0.1
  when: inventory_hostname != 'localhost'
  vars:
    hv_var: "{{ cwd }}/inventory/host_vars\
      /{{ update_hostname | default(inventory_hostname) }}.yml"
  notify: save host vars
