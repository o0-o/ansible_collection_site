---
# vim: ts=2:sw=2:sts=2:et:ft=yaml.ansible:noai
#
# Configure bridged interfaces based on the ifaces list in host_vars
# and nets dictionary in group_vars.
#
########################################################################

# All bridges need a vether device in OpenBSD
- name: Initialize bridge members list
  ansible.builtin.set_fact:
    bridge_members: []

# Interfaces in the inventory that specify a the bridge.
- name: Enumerate physical interfaces in the bridge
  ansible.builtin.set_fact:
    bridge_members: "{{ bridge_members
                        | union([dev_item]) }}"
  loop: "{{ phy_ifaces
            | selectattr('bridge', 'defined')
            | selectattr('bridge', '==', bridge_item)
            | map (attribute='dev') }}"
  loop_control:
    loop_var: dev_item

# VLAN in the inventory that specify the network associated with the
# bridge.
- name: Add VLAN to the bridge
  ansible.builtin.set_fact:
    bridge_members: "{{ bridge_members
                        | union([bridge_vlan]) }}"
  vars:
    bridge_vlan: "{{ 'vlan' + site_subnets[bridge_item]['subnet_id']
                              | string }}"

- name: Define the bridge name
  ansible.builtin.set_fact:
    bridge_dev: "{{ 'bridge' +  site_subnets[bridge_item]['subnet_id']
                                | string }}"

- name: Save bridge configuration to host
  ansible.builtin.include_tasks: "cfg_bridge_{{ansible_system}}.yml"
