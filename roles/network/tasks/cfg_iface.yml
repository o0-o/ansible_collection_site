---
# vim: ts=2:sw=2:sts=2:et:ft=yaml.ansible
#
# Configure interfaces based on iface list in host_vars and net dict in
# group_vars
#
# Interfaces are configured in the following order: CARP, VLAN, physical
# interface. This allows interfaces with a limited address pool (WAN) to
# have only a CARP address.
#
# In addition to CARP and simple IPv4, pf tables entries, routes and MTU
# are configured in the hostname.if files. Description and group are
# configured based on the net dict.
#
########################################################################

- name: Define the interface
  ansible.builtin.include_tasks: def_iface.yml

# CARP gets address precedence in case only 1 IP address is available.
- name: "Configure CARP interface {{carp_var['dev']}}"
  ansible.builtin.include_tasks: cfg_iface_carp.yml
  register: cfg_carp_reg
  vars:
    carp_var: "{{ { 'dev': 'carp' + iface['subnet_id'] | string,
                    'subnet': iface['subnet'],
                    'vhid': iface['subnet_id'] } }}"
  when:
  - ansible_system | lower in ['openbsd', 'freebsd']
  - iface['subnet'] is defined
  - iface['carp'] | default(false)

- name: Reset variables after CARP configuration
  ansible.builtin.include_tasks: def_iface.yml
  when: iface['type'] == 'carp'

- name: "Configure VLANS on {{iface['dev']}}"
  ansible.builtin.include_tasks: cfg_iface_vlan.yml
  loop: "{{ iface['vlans'] | default([]) }}"
  loop_control:
    loop_var: vlan_subnet_item

- name: Reset variables after VLAN configuration
  ansible.builtin.include_tasks: def_iface.yml
  when: iface['type'] == 'vlan'

# Need to run this serially to avoid IP collisions
- name: "Define the IP address for interface {{iface['dev']}}"
  ansible.builtin.include_tasks: def_iface_ip4.yml

- name: Run platform-specific interface configuration tasks
  ansible.builtin.include_tasks: "{{lookup('first_found', files_var)}}"
  vars:
    prefix_var: cfg_iface_
    suffix_var: .yml
    files_var:
      files:
      - "{{prefix_var}}\
        {{ ansible_distribution | lower }}-\
        {{ ansible_distribution_version | lower() }}_\
        {{ net_ctl_srv | default }}\
        {{suffix_var}}"
      - "{{prefix_var}}\
        {{ ansible_distribution | lower }}-\
        {{ ansible_distribution_version | lower() }}\
        {{suffix_var}}"
      - "{{prefix_var}}\
        {{ ansible_distribution | lower }}-\
        {{ ansible_distribution_major_version | default('') | lower }}_\
        {{ net_ctl_srv | default }}\
        {{suffix_var}}"
      - "{{prefix_var}}\
        {{ ansible_distribution | lower }}-\
        {{ ansible_distribution_major_version | default('') | lower }}\
        {{suffix_var}}"
      - "{{prefix_var}}\
        {{ ansible_distribution | lower }}_\
        {{ net_ctl_srv | default }}\
        {{suffix_var}}"
      - "{{prefix_var}}\
        {{ ansible_distribution | lower }}\
        {{suffix_var}}"
      - "{{prefix_var}}\
        {{ ansible_os_family | lower }}_\
        {{ net_ctl_srv | default }}\
        {{suffix_var}}"
      - "{{prefix_var}}\
        {{ ansible_os_family | lower }}\
        {{suffix_var}}"
      - "{{prefix_var}}\
        {{ ansible_system | lower }}_\
        {{ net_ctl_srv | default }}\
        {{suffix_var}}"
      - "{{prefix_var}}\
        {{ ansible_system | lower }}\
        {{suffix_var}}"
      paths:
      - tasks/
